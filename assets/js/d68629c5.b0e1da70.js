"use strict";(self.webpackChunkdata_and_analytics=self.webpackChunkdata_and_analytics||[]).push([[3661],{62419:e=>{e.exports=JSON.parse('{"label":"DAX","permalink":"/tags/dax","allTagsPath":"/tags","count":3,"items":[{"id":"book/chapter5/05-05-common-DAX","title":"5.5 | Commonly used DAX measure patterns using CALCULATE()","description":"Learning, understanding and applying the DAX language to create complex calculations is not easy. Although some functions seem familiar to the formulas used in Excel, the language is much more abstract, especially in the context of a data model with many table relations and of course a given filter context based on which a measure is evaluated.","permalink":"/5.5"},{"id":"book/chapter5/05-06-summary-measures","title":"5.6 | Summary and takeaways for working with measures and DAX","description":"Measures are very important for every BI solution and the DAX language to define them is very powerful and capable of implementing even the most complex requirements.","permalink":"/5.6"},{"id":"book/chapter5/05-08-calc-table","title":"5.8 | Creating a calculated table with DAX","description":"For a measure to work properly, the DAX code used must return a single value. But there are also DAX functions that return entire tables. Given that, we can create calculated tables using DAX that are part of the data model. In this short chapter, I want to show how this is done using different DAX table functions.","permalink":"/5.8"}]}')}}]);